package GUI;

import QuanLy.QuanLySanPham;
import Objects.SanPham;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.text.MaskFormatter;
import FileIOCSV.FileIOSanPham;
import java.awt.event.KeyEvent;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ProductFrame extends javax.swing.JFrame {

    List<SanPham> listSanPham = new ArrayList<>();

    FileIOSanPham f = new FileIOSanPham();
    QuanLySanPham quanLySanPham = new QuanLySanPham();
    DefaultTableModel SanPhamModel;
    private int selectedIndex;
    DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");

    public ProductFrame() {
        initComponents();
        listSanPham = f.SanPhamReadCSV();
        SanPhamModel = (DefaultTableModel) SanPhamTable.getModel();
        UpdateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        IDField = new javax.swing.JTextField();
        NameField = new javax.swing.JTextField();
        NhaSXField = new javax.swing.JTextField();
        PriceField = new javax.swing.JTextField();
        MFDField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        DonViTinhField = new javax.swing.JTextField();
        LoaiSPField = new javax.swing.JTextField();
        EXPField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        QuantityField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        SearchField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        SanPhamTable = new javax.swing.JTable();
        AddButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        EditButton = new javax.swing.JButton();
        SaveButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        QuatityRadioButton = new javax.swing.JRadioButton();
        PriceRadioButton = new javax.swing.JRadioButton();
        MFDRadioButton = new javax.swing.JRadioButton();
        EXPRadioButton = new javax.swing.JRadioButton();
        NSXRadioButton = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        LocButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sản Phẩm");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sản Phẩm");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Mã Sản Phẩm");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Tên Sản Phẩm");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Nhà Sản Xuất");

        IDField.setEditable(false);
        IDField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        IDField.setToolTipText("");

        NameField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        NameField.setToolTipText("");
        NameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                NameFieldFocusLost(evt);
            }
        });

        NhaSXField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        NhaSXField.setToolTipText("");

        PriceField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        PriceField.setToolTipText("");
        PriceField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                PriceFieldFocusLost(evt);
            }
        });
        PriceField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PriceFieldKeyReleased(evt);
            }
        });

        MFDField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        MFDField.setText("01/01/2000");
        MFDField.setToolTipText("");
        MFDField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MFDFieldFocusLost(evt);
            }
        });
        MFDField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MFDFieldKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Số Lượng");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Đơn Vị Tính");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Loại Sản Phẩm");

        DonViTinhField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        DonViTinhField.setToolTipText("");

        LoaiSPField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        LoaiSPField.setToolTipText("");

        EXPField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        EXPField.setText("01/01/2000");
        EXPField.setToolTipText("");
        EXPField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                EXPFieldFocusLost(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Giá Nhập");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Ngày Sản Xuất");

        QuantityField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        QuantityField.setToolTipText("");
        QuantityField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                QuantityFieldFocusLost(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Hạn Sử Dụng");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Tìm Kiếm");

        SearchField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        SearchField.setToolTipText("");

        SanPhamTable.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        SanPhamTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Sản Phẩm", "Tên Sản Phẩm", "Loại", "Số Lượng", "Đơn Vị Tính", "Giá Nhập", "Giá Bán", "Nhà Sản Xuất", "Ngày Sản Xuất", "Hạn Sử dụng"
            }
        ));
        SanPhamTable.getTableHeader().setReorderingAllowed(false);
        SanPhamTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SanPhamTableMouseClicked(evt);
            }
        });
        SanPhamTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SanPhamTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(SanPhamTable);
        SanPhamTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (SanPhamTable.getColumnModel().getColumnCount() > 0) {
            SanPhamTable.getColumnModel().getColumn(0).setMinWidth(35);
            SanPhamTable.getColumnModel().getColumn(0).setMaxWidth(35);
            SanPhamTable.getColumnModel().getColumn(1).setMinWidth(80);
            SanPhamTable.getColumnModel().getColumn(1).setMaxWidth(80);
            SanPhamTable.getColumnModel().getColumn(3).setMinWidth(80);
            SanPhamTable.getColumnModel().getColumn(3).setMaxWidth(80);
            SanPhamTable.getColumnModel().getColumn(4).setMinWidth(80);
            SanPhamTable.getColumnModel().getColumn(4).setMaxWidth(80);
            SanPhamTable.getColumnModel().getColumn(5).setMinWidth(80);
            SanPhamTable.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        AddButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        AddButton.setText("Thêm");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        DeleteButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        DeleteButton.setText("Xóa");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        EditButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        EditButton.setText("Sửa");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        SaveButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        SaveButton.setText("Lưu");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        ExitButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ExitButton.setText("Thoát");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        ResetButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ResetButton.setText("Reset");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setText("Sắp Xếp");

        buttonGroup1.add(QuatityRadioButton);
        QuatityRadioButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        QuatityRadioButton.setSelected(true);
        QuatityRadioButton.setText("Số Lượng");
        QuatityRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuatityRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(PriceRadioButton);
        PriceRadioButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        PriceRadioButton.setText("Giá");
        PriceRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(MFDRadioButton);
        MFDRadioButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        MFDRadioButton.setText("Ngày SX");

        buttonGroup1.add(EXPRadioButton);
        EXPRadioButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        EXPRadioButton.setText("Hạn Sử Dụng");
        EXPRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXPRadioButtonActionPerformed(evt);
            }
        });

        NSXRadioButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        NSXRadioButton.setText("Nhà Sản Xuất");

        buttonGroup2.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButton1.setText("Giảm Dần");

        buttonGroup2.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButton2.setSelected(true);
        jRadioButton2.setText("Tăng Dần");

        LocButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        LocButton.setText("Lọc");
        LocButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LocButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(112, 112, 112))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(38, 38, 38)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(IDField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                            .addComponent(NameField)
                                            .addComponent(NhaSXField)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 17, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addComponent(AddButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DeleteButton)
                                .addGap(56, 56, 56)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(EditButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LocButton)
                                .addGap(150, 150, 150)
                                .addComponent(SaveButton)
                                .addGap(137, 137, 137)
                                .addComponent(ExitButton)
                                .addGap(44, 44, 44))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(QuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(LoaiSPField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(DonViTinhField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(59, 59, 59)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ResetButton)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(PriceField)
                                        .addComponent(MFDField)
                                        .addComponent(EXPField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(70, 70, 70))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(QuatityRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(PriceRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(MFDRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(EXPRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(NSXRadioButton)
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton2)
                                    .addComponent(jRadioButton1))
                                .addGap(22, 22, 22))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NhaSXField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LoaiSPField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(QuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DonViTinhField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MFDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EXPField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(33, 33, 33)
                .addComponent(ResetButton)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(MFDRadioButton)
                            .addComponent(PriceRadioButton)
                            .addComponent(QuatityRadioButton)
                            .addComponent(EXPRadioButton)
                            .addComponent(NSXRadioButton)
                            .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddButton)
                            .addComponent(EditButton)
                            .addComponent(SaveButton)
                            .addComponent(DeleteButton)
                            .addComponent(ExitButton)
                            .addComponent(LocButton))
                        .addGap(45, 45, 45))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        quanLySanPham.ThemSP(new SanPham(NameField.getText(), NhaSXField.getText(), LoaiSPField.getText(), Integer.parseInt(QuantityField.getText()), DonViTinhField.getText(), Integer.parseInt(PriceField.getText()), LocalDate.parse(MFDField.getText(), dateTimeFormatter), LocalDate.parse(EXPField.getText(), dateTimeFormatter)));
        UpdateTable();
        Reset();
    }//GEN-LAST:event_AddButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        selectedIndex = SanPhamTable.getSelectedRow();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn sản phẩm cần xóa!");
        } else {
            int result = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc muốn xóa sản phẩm này?", "Xác Nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (result == JOptionPane.YES_OPTION) {
                int maSP = Integer.parseInt(IDField.getText());
                quanLySanPham.xoaSP(maSP);
                UpdateTable();
                Reset();
            }
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        selectedIndex = SanPhamTable.getSelectedRow();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn sản phẩm cần sửa!");
        } else {
            int result = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc muốn sửa sản phẩm này?", "Xác Nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (result == JOptionPane.YES_OPTION) {
                SanPham s = new SanPham();
                s.setTenSanPham(NameField.getText());
                s.setNhaSX(NhaSXField.getText());
                s.setLoaiSanPham(LoaiSPField.getText());
                s.setSoLuong(Integer.parseInt(QuantityField.getText()));
                s.setDonViTinh(DonViTinhField.getText());
                s.setGiaNhap(Integer.parseInt(PriceField.getText()));
                s.setGiaBan(Integer.parseInt(PriceField.getText()));
                LocalDate NSX = LocalDate.parse(MFDField.getText(), dateTimeFormatter);
                LocalDate HSD = LocalDate.parse(EXPField.getText(), dateTimeFormatter);
                s.setNSX(NSX);
                s.setHSD(HSD);
                int maSP = Integer.parseInt(IDField.getText());
                quanLySanPham.SuaSP(maSP, s);
                UpdateTable();
                Reset();
            }
        }
    }//GEN-LAST:event_EditButtonActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed

    }//GEN-LAST:event_SaveButtonActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        Reset();
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void QuatityRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuatityRadioButtonActionPerformed

    }//GEN-LAST:event_QuatityRadioButtonActionPerformed

    private void EXPRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXPRadioButtonActionPerformed

    }//GEN-LAST:event_EXPRadioButtonActionPerformed

    private void LocButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocButtonActionPerformed

    }//GEN-LAST:event_LocButtonActionPerformed

    private void MFDFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MFDFieldKeyReleased
        MaskFormatter mf;
        JFormattedTextField dateFormat = null;
        try {
            mf = new MaskFormatter("##/##/####");
            mf.setPlaceholderCharacter('#');
            dateFormat = new JFormattedTextField(mf);
            dateFormat.setColumns(8);
            this.add(dateFormat);
        } catch (ParseException ex) {
            Logger.getLogger(ProductFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_MFDFieldKeyReleased

    private void PriceFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PriceFieldKeyReleased
        NumberFormat nf = NumberFormat.getNumberInstance();
        nf.setGroupingUsed(true);
        nf.format(Double.parseDouble(PriceField.getText()));
    }//GEN-LAST:event_PriceFieldKeyReleased

    private void SanPhamTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SanPhamTableMouseClicked
        selectedIndex = SanPhamTable.getSelectedRow();

        displayDetails(selectedIndex);
    }//GEN-LAST:event_SanPhamTableMouseClicked

    private void SanPhamTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SanPhamTableKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            selectedIndex = SanPhamTable.getSelectedRow();
            displayDetails(selectedIndex);
        }
    }//GEN-LAST:event_SanPhamTableKeyReleased

    private void NameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NameFieldFocusLost
        if (NameField.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Tên không được để trống");
        }
    }//GEN-LAST:event_NameFieldFocusLost

    private void QuantityFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_QuantityFieldFocusLost
        if (QuantityField.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Số lượng không được để trống");
        } else if (Integer.parseInt(QuantityField.getText()) <= 0) {
            JOptionPane.showMessageDialog(rootPane, "Số lượng phải lớn hơn 0");
        }
    }//GEN-LAST:event_QuantityFieldFocusLost

    private void PriceFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PriceFieldFocusLost
        if (QuantityField.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Giá nhập không được để trống");
        } else if (Integer.parseInt(QuantityField.getText()) <= 0) {
            JOptionPane.showMessageDialog(rootPane, "Giá nhập phải lớn hơn 0");
        }
    }//GEN-LAST:event_PriceFieldFocusLost

    private void MFDFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MFDFieldFocusLost
        String reg = "^\\d{2}/\\d{2}/\\d{4}$";
        if (!MFDField.getText().matches(reg)) {
            JOptionPane.showMessageDialog(rootPane, "NSX sai định dạng");
        } else {
            String[] s = MFDField.getText().split("/");
            int d = Integer.parseInt(s[0]);
            int m = Integer.parseInt(s[1]);
            int y = Integer.parseInt(s[2]);
            if (m == 0 || m > 12) {
                JOptionPane.showMessageDialog(rootPane, "Tháng không hợp lệ");
            } else {
                if (d <= 0) {
                    JOptionPane.showMessageDialog(rootPane, "Ngày không hợp lệ");
                } else {
                    switch (m) {
                        case 1:
                        case 3:
                        case 5:
                        case 7:
                        case 8:
                        case 10:
                        case 12:
                            if (d > 31) {
                                JOptionPane.showMessageDialog(rootPane, "Ngày không hợp lệ");
                            }
                            break;
                        case 4:
                        case 6:
                        case 9:
                        case 11:
                            if (d > 30) {
                                JOptionPane.showMessageDialog(rootPane, "Ngày không hợp lệ");
                            }
                            break;
                        case 2:
                            if ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0) {
                                if (d > 29) {
                                    JOptionPane.showMessageDialog(rootPane, "Ngày không hợp lệ");
                                }
                            } else {
                                if (d > 28) {
                                    JOptionPane.showMessageDialog(rootPane, "Ngày không hợp lệ");
                                }
                            }
                            break;
                        default:
                            JOptionPane.showMessageDialog(rootPane, "Ngày không hợp lệ");
                    }
                }
            }
        }
    }//GEN-LAST:event_MFDFieldFocusLost

    private void EXPFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EXPFieldFocusLost
        String reg = "^\\d{2}/\\d{2}/\\d{4}$";
        if (!EXPField.getText().matches(reg)) {
            JOptionPane.showMessageDialog(rootPane, "HSD sai định dạng");
        } else {
            String[] s = EXPField.getText().split("/");
            int d = Integer.parseInt(s[0]);
            int m = Integer.parseInt(s[1]);
            int y = Integer.parseInt(s[2]);
            if (m == 0 || m > 12) {
                JOptionPane.showMessageDialog(rootPane, "Tháng không hợp lệ");
            } else {
                if (d <= 0) {
                    JOptionPane.showMessageDialog(rootPane, "Ngày không hợp lệ");
                } else {
                    switch (m) {
                        case 1:
                        case 3:
                        case 5:
                        case 7:
                        case 8:
                        case 10:
                        case 12:
                            if (d > 31) {
                                JOptionPane.showMessageDialog(rootPane, "Ngày không hợp lệ");
                            }
                            break;
                        case 4:
                        case 6:
                        case 9:
                        case 11:
                            if (d > 30) {
                                JOptionPane.showMessageDialog(rootPane, "Ngày không hợp lệ");
                            }
                            break;
                        case 2:
                            if ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0) {
                                if (d > 29) {
                                    JOptionPane.showMessageDialog(rootPane, "Ngày không hợp lệ");
                                }
                            } else {
                                if (d > 28) {
                                    JOptionPane.showMessageDialog(rootPane, "Ngày không hợp lệ");
                                }
                            }
                            break;
                        default:
                            JOptionPane.showMessageDialog(rootPane, "Ngày không hợp lệ");
                    }
                }
            }
        }
    }//GEN-LAST:event_EXPFieldFocusLost

    private void PriceRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceRadioButtonActionPerformed

    private void Reset() {
        IDField.setText("");
        NameField.setText("");
        NhaSXField.setText("");
        LoaiSPField.setText("");
        QuantityField.setText("");
        DonViTinhField.setText("");
        PriceField.setText("");
        MFDField.setText("01/01/2000");
        EXPField.setText("01/01/2000");
    }

    int i = 1;

    private void UpdateTable() {
        listSanPham = f.SanPhamReadCSV();
        SanPhamModel.setRowCount(0);
        for (SanPham s : listSanPham) {
            SanPhamModel.addRow(new Object[]{i, s.getMaSanPham(), s.getTenSanPham(), s.getLoaiSanPham(), s.getSoLuong(), s.getDonViTinh(), s.getGiaNhap(), s.getGiaBan(), s.getNhaSX(), s.getNSX().format(dateTimeFormatter), s.getHSD().format(dateTimeFormatter)});
            i++;
            SanPhamTable.scrollRectToVisible(SanPhamTable.getCellRect(SanPhamTable.getRowCount() - 1, 0, true));
        }
    }

    private void displayDetails(int selectedIndex) {
        SanPham s = f.SanPhamReadCSV().get(selectedIndex);

        IDField.setText(String.valueOf(s.getMaSanPham()));
        NameField.setText(s.getTenSanPham());
        NhaSXField.setText(s.getNhaSX());
        LoaiSPField.setText(s.getLoaiSanPham());
        QuantityField.setText(String.valueOf(s.getSoLuong()));
        DonViTinhField.setText(s.getDonViTinh());
        PriceField.setText(String.valueOf(s.getGiaNhap()));
        MFDField.setText(s.getNSX().format(dateTimeFormatter));
        EXPField.setText(s.getHSD().format(dateTimeFormatter));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTextField DonViTinhField;
    private javax.swing.JTextField EXPField;
    private javax.swing.JRadioButton EXPRadioButton;
    private javax.swing.JButton EditButton;
    private javax.swing.JButton ExitButton;
    private javax.swing.JTextField IDField;
    private javax.swing.JTextField LoaiSPField;
    private javax.swing.JButton LocButton;
    private javax.swing.JTextField MFDField;
    private javax.swing.JRadioButton MFDRadioButton;
    private javax.swing.JRadioButton NSXRadioButton;
    private javax.swing.JTextField NameField;
    private javax.swing.JTextField NhaSXField;
    private javax.swing.JTextField PriceField;
    private javax.swing.JRadioButton PriceRadioButton;
    private javax.swing.JTextField QuantityField;
    private javax.swing.JRadioButton QuatityRadioButton;
    private javax.swing.JButton ResetButton;
    private javax.swing.JTable SanPhamTable;
    private javax.swing.JButton SaveButton;
    private javax.swing.JTextField SearchField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
